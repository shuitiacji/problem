1.P1251
题意:
一个餐厅在相继的 N 天里,每天需用的餐巾数不尽相同。假设第 i 天需要 ri块餐巾( i=1,2,...,N)。餐厅可以购买新的餐巾,每块餐巾的费用为 p 分;或者把旧餐巾送到快洗部,洗一块需 m 天,其费用为 f 分;或者送到慢洗部,洗一块需 n 天( n>m ),其费用为 s 分( s<f )。

每天结束时,餐厅必须决定将多少块脏的餐巾送到快洗部,多少块餐巾送到慢洗部,以及多少块保存起来延期送洗。但是每天洗好的餐巾和购买的新餐巾数之和,要满足当天的需求量。

试设计一个算法为餐厅合理地安排好 N 天中餐巾使用计划,使总的花费最小。编程找出一个最佳餐巾使用计划。

思路：
先确定模型，因为是要求在满足每天需求量下的最小花费，容易想到最小费用最大流，也是在满足最大流基础上的最小费用流。
为满足满流情况满足题意，自然的想到每一天当一个点，向t连容量为ri的弧，这样求最大流就是在满足题意了。
但这样做的缺陷是难以表示每个点洗毛巾得到的，如果从另一个点连过来，因为用掉的毛巾已是流走到t去了，不能从它那凭空得到流量；若从s连过来，可以凭空得到流量，但因为有两种方式洗毛巾，所以如果直接从s引两条，这两条之间没有约束，可能两条总流量会大于那天要洗的毛巾量。
在建模中出现矛盾，可能是状态不足，考虑分点。

首先，我们拆点，将一天拆成晚上和早上，每天晚上会受到脏餐巾（来源：当天早上用完的餐巾，在这道题中可理解为从原点获得），每天早上又有干净的餐巾（来源：购买、快洗店、慢洗店）。

1.从原点向每一天晚上连一条流量为当天所用餐巾x，费用为0的边，表示每天晚上从起点获得x条脏餐巾。

2.从每一天早上向汇点连一条流量为当天所用餐巾x，费用为0的边，每天白天,表示向汇点提供x条干净的餐巾,流满时表示第i天的餐巾够用 。 3.从每一天晚上向第二天晚上连一条流量为INF，费用为0的边，表示每天晚上可以将脏餐巾留到第二天晚上（注意不是早上，因为脏餐巾在早上不可以使用）。

4.从每一天晚上向这一天+快洗所用天数t1的那一天早上连一条流量为INF，费用为快洗所用钱数的边，表示每天晚上可以送去快洗部,在地i+t1天早上收到餐巾 。

5.同理，从每一天晚上向这一天+慢洗所用天数t2的那一天早上连一条流量为INF，费用为慢洗所用钱数的边，表示每天晚上可以送去慢洗部,在地i+t2天早上收到餐巾 。

6.从起点向每一天早上连一条流量为INF，费用为购买餐巾所用钱数的边，表示每天早上可以购买餐巾 。 注意，以上6点需要建反向边！3~6点需要做判断（即连向的边必须<=n）


2.P2754
题意
现有 n 个太空站位于地球与月球之间，且有 m 艘公共交通太空船在其间来回穿梭。每个太空站可容纳无限多的人，而每艘太空船 i 只可容纳 H[i]个人。每艘太空船将周期性地停靠一系列的太空站，例如：(1，3，4)表示该太空船将周期性地停靠太空站 134…。每一艘太空船从一个太空站驶往任一太空站耗时均为 1。人们只能在太空船停靠太空站(或月球、地球)时上、下船。
初始时所有人全在地球上，太空船全在初始站。试设计一个算法，找出让所有人尽快地全部转移到月球上的运输方案。

思路：
一开始想的是最小费用最大流，费用想的是时间，发现不好处理。
换一个思路，枚举答案，按时间建点，跑最大流看大不大于k。（无解可以用并查集预判，也可以自己定个数break）

思考：
网络流中常用技巧分层图

3.P2762
题意：
做实验可以得钱，每个实验都需要使用一些仪器，买仪器也要钱，仪器可以共用不同需要它的实验。问最大收益与方案。

思路：
这种东西可以取或不取的题目，可以转化为最小割来求。
这题的状态有点奇妙，可以理解成仪器的状态是反的（因为取仪器不会得到权值，而会失去权值）（类比一下方格取数，每个数的权值对于结果来说都是得到，也就是”加“的关系，不像本题出现”减“的关系）
想通这点就很简单了，sum表示所有实验的收益，连s到实验为实验的权值，连仪器到t为仪器的权值，连相关的实验到仪器为0x3f3f3f3f表示这个实验选，则仪器也必须要选（虽然仪器的边被割了，看上去没选，实际上因为仪器的权值相当于负的，状态是反的，相当于选了）
还有一个问题就是求方案。
这题比较好处理，因为仪器状态是反的，直接看vis即可（因为虽然vis不能代表它的这个边有没有被割，只能代表它所对应的实验的边没有被割，但此题状态反转，选了实验仪器也选了）

4.P2774

题意：
在一个有 m*n 个方格的棋盘中，每个方格中有一个正整数。现要从方格中取数，使任意 2 个数所在方格没有公共边，且取出的数的总和最大。试设计一个满足要求的取数算法。对于给定的方格棋盘，按照取数要求编程找出总和最大的数。
思路：
这种取数，且数与数之间有关系的题，可以构建二分图求最小割解决。
对于路径source -> x -> y -> sink，我们根据最小割的边来讨论所表示的意义。
一、若割去source -> x，说明不选x点选y点；
二、若割去y->sink，说明不选y点选x点；
三、若割去x->y，说明既选x点又选y点。
对于本题：
一、对y与sink连点，容量为y权值
二、对x与source连点，容量为x权值
三、对x与y连点，容量为0x3f3f3f3f，表示无法割去，即xy不能同选
对于二分图：
我们发现只有i+j为奇的点会与i+j为偶的有关系，根据这个建二分图即可

5.P2824

题意：
在2016年，佳媛姐姐喜欢上了数字序列。因而他经常研究关于序列的一些奇奇怪怪的问题，现在他在研究一个难题，需要你来帮助他。这个难题是这样子的：给出一个1到n的全排列，现在对这个全排列序列进行m次局部排序，排序分为两种：1:(0,l,r)表示将区间[l,r]的数字升序排序2:(1,l,r)表示将区间[l,r]的数字降序排序最后询问第q位置上的数字。

思路：
只有一次查询，考虑离线。
适当将信息模糊化，使得题目更容易处理。
二分一个答案，将原序列中大于等于这个答案的置为1，小于置成0。
这样使得排序操作更好处理，先query一下区间1的个数，根据升序降序，把1放在区间的一端。
最后看q位置是否为1，为1则表示该位置原数应大于等于答案，根据这个check即可。

6.P3415
题意:在平面内找一点，使得它的四个正方向上的点的数量的最小值最大
思路：先考虑二分一个答案，扫描线维护一个行的维度，自上而下扫下来，并根据二分的答案处理当前线上可行的一个区间，用一个BIT维护列的维度，同时可以处理出每个当前线上的点的up和down即这个点上面有多少与下面有多少，根据up与down确定这列所在是否可行，用此更新BIT，最后求一下这个扫描线上可行区间内的区间和，加到总的答案当中。
思考：
多维问题考虑用扫描线处理一维，同时要做到这一维方便处理，所以用到二分答案方便划分出可行区间

7.P3722

题意：给你一个N的排列，对于区间[l,r]，若l和r为区间最大值与次大值，则对区间有p1的贡献；若l和r中一个位最大值，一个不为次大值，则有p2的贡献。有m个查询[l,r]，查询区间[l,r]内的贡献

思路：可将每个点左边比它大的第一个和右边比它大的第一个预处理出来记为L[i]与R[i]，这样：1.L[i]与R[i]构成点对，中间的数都比他们小，产生p1贡献(给R[i]打上标记)。
2.L[i]+1——i-1中的每个点与R[i]构成点对，在加上中间的i就可以满足题意，产生p2贡献(给R[i]打上标记)
3.同理i+1——R[i]-1与L[i]构成点对产生p2贡献(给L[i]打上标记)
再将询问离线处理，扫描线一遍扫过去，碰到标记点，给相关的点用线段树区间加一下，碰到询问分两次，一次是询问刚开始，先线段树查一下区间，因为这时这个区间的标记点没有处理，所以此时的结果是不在此区间的标记点产生的，要存下来减掉，第二次，再query一下，并减掉第一次的多余的，得到答案。

