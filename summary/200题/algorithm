线段树：
1.吉司机线段树——势能分析线段树
大体思想是一些线段树无法普通标记维护的东西，但是又很想用线段树来维护
此时有个思想是能打标记就打，不能打就递归下去到能打的地方
这个东西的复杂度要根据题目来看，主要利用势能分析，看普通操作（即普通地区间打标记）生成了什么，暴力dfs消耗了什么

2.线段树合并
常用于维护树上的子树信息，先离线信息到树上，每个点维护个线段树，最后dfs一遍，回溯时合并子树信息。常用于查一颗子树内满足什么性质的点有几个之内的问题

3.线段树分治
对于存在撤销操作的题目，且其维护的东西比较好用整体考虑(图，凸包)。考虑按时间维建出线段树，把一个操作产生影响的时间段在线段树里打上标记，再dfs向所有存在询问的叶子节点，像标记永久化一样把路上的所有标记算入影响，离开节点时，再撤销这个节点的影响．

4.线段树优化建边
让边建少的办法，一般是新建节点
例如要[l,r]区间的点向[x,y]区间的点连边，没有必要做到n^2，新建一个节点d，[l,r]都向d连边，d向[x,y]连边，可以O(n).
发现上面这是个区间操作，我们还可以按线段树的形式新建虚拟节点
建两颗线段树A,B　分别表示出线段树和入线段树。两个线段树叶子节点都表示原图中的点，B线段树叶子节点向对应的A的叶子连边。A中所有的儿子向父亲连边，B中所有的父亲向儿子连边
连边时，找到所有A中被包含在[l,r]的区间节点，新建一个d，这些节点向d连边，找到所有B中被包含在[x,y]的区间节点，d向这些点连边

5.最优位置线段树
在线段树上记录区间最值，维护动态非单调序列中<=某个数的最左位置

树:
1.点分治
用来方便地统计树上链的信息
考虑把链分为过根的和不过根的，不过根的可以递归下去搞。过根的所有链，两个端点肯定在根的不同子树中，dfs所有子树节点，dfs同时用个容器统计链之类的
时间复杂度在这样的操作会执行多少次，考虑优化，肯定是当前为重心最好(最大的子树最小)，这样每执行一次这样的操作，子树大小缩小一半，复杂度为nlogn

2.dsu on tree
大体思想是想自始至终使用一个容器来解决关于子树的询问。
显然这难以做到，比如对于一个点的左儿子与右儿子来说，算答案时决不能用同一个容器
那么有个暴力的思路，扫过一个儿子就把容器清空，再去算另一个儿子。最后算父亲时，再把所有子树加进容器里。
一开始要删，后面又要加进来，岂不是很浪费
我们能做到的是保留一个儿子，即处理的最后一个儿子，因为此时它的兄弟都搞完了，没必要清空容器，可以直接继承上去给父亲
显然我们要保留重儿子。
现在来证一下复杂度，假设把容器放入一个元素的复杂度为O(1)
一个点会被放进容器里时，当且仅当它的一个祖先为轻儿子，而一个点到根的路径上只有log个轻边(树链剖分中的证明)，所以O(nlogn)

可以处理子树内满足条件的有多少个(基本上处理一些莫队能解决的问题)，还可以处理某子树内满足什么条件的链(按点分治的思想，处理过根的)

数学
1.广义容斥
本质上是二项式反演
2.莫比乌斯反演
本质上u就是个容斥系数
https://www.k-xzy.xyz/archives/1608
